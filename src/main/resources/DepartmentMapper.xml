<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.DepartmentMapper">

    <select id="getDeptById" resultType="com.hy.mybatis.Department">
        select id,departname departname  FROM  depart where id =#{id}
    </select>

    <!--
public class Department {
        private Integer id;
        private String departmentName;
        private List<Employee> emps;
  did  dept_name  ||  eid  last_name  email   gender
 -->

    <!--嵌套结果集的方式，使用collection标签定义关联的集合类型的属性封装规则  -->
    <resultMap type="com.hy.mybatis.Department" id="MyDept">
        <id column="did" property="id"/>
        <result column="deptname" property="departmentname"/>
        <!--
            collection定义关联集合类型的属性的封装规则
            ofType:指定集合里面元素的类型
        -->
        <collection property="emps" ofType="com.hy.mybatis.Employee">
            <!-- 定义这个集合中元素的封装规则 -->
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email"/>
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>
    <!-- public Department getDeptByIdPlus(Integer id); -->
    <select  id ="getDeptByIdPlus" resultMap="MyDept">
        SELECT d.id did,d.deptname deptname,
        e.id eid,e.last_name last_name,e.email email,e.gender gender
        FROM depart d
        LEFT JOIN employee e
        ON d.id=e.d_id
        WHERE d.id=#{id}
    </select>

    <!-- collection：分段查询 -->
    <resultMap type="com.hy.mybatis.Department" id="MyDeptStep">
        <id column="id" property="id"/>
        <id column="deptname" property="departmentname"/>
        <collection property="emps"
                    select="mapper.EmployeeMapperPlus.getEmpsByDeptId"
                    column="{deptId=id}" fetchType="lazy"></collection>
        <!--上面的column="{deptId=id}可以直接写成column="id" ，即是将id值传递进来，上面主要是为了演示下面的多个传递参数键值-->
    </resultMap>
    <!-- public Department getDeptByIdStep(Integer id); -->
    <select id="getDeptByIdStep" resultMap="MyDeptStep">
        select id,deptname from depart where id=#{id}
    </select>

    <!-- 扩展：多列的值传递过去：
            将多列的值封装map传递；
            column="{key1=column1,key2=column2}"
        fetchType="lazy"：表示使用延迟加载；
                - lazy：延迟
                - eager：立即
     -->
</mapper>