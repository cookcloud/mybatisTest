<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.EmployeeMapper">
    <!--
    databaseId标签主要是标识这是mysql中的sql语句，主要和mybatis-config.xml文件中的databaseIdProvider标签进行合作使用的
    -->
    <select id="getEmployeeById" parameterType="Integer" resultType="employee" databaseId="mysql">
        select id,last_name,email,gender from employee where id = #{id}
    </select>

    <!-- parameterType类型可以省略 -->
    <!--获取自增主键的值：
    mysql支持自增主键，自增主键值的获取，mybatis也是利用statement.getGenreatedKeys()；
    useGeneratedKeys="true"；使用自增主键获取主键值策略
    keyProperty；指定对应的主键属性，也就是mybatis获取到主键值以后，将这个值封装给javaBean的哪个属性-->
    <insert id="addEmployee" parameterType="employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee (last_name,email,gender)
        values (#{lastName},#{email},#{gender})
    </insert>

    <!--
	获取非自增主键的值：
		Oracle不支持自增；Oracle使用序列来模拟自增；
		每次插入的数据的主键是从序列中拿到的值；如何获取到这个值；
	 -->
    <!--
       keyProperty:查出的主键值封装给javaBean的哪个属性
       order="BEFORE":当前sql在插入sql之前运行
              AFTER：当前sql在插入sql之后运行
       resultType:查出的数据的返回值类型

       BEFORE运行顺序：
           先运行selectKey查询id的sql；查出id值封装给javaBean的id属性
           在运行插入的sql；就可以取出id属性对应的值
       AFTER运行顺序：
           先运行插入的sql（从序列中取出新值作为id）；
           再运行selectKey查询id的sql；
           详情见mybati03_mapper代码实例
        -->

    <update id="updateEmployee">
        update employee
        set last_name=#{lastName},email=#{email},gender=#{gender}
        where id=#{id}
    </update>

    <delete id="deleteEmployee">
        delete from employee
        where id =#{id}
    </delete>

    <!--
    多条件查询
    -->
    <select id="getEmployeeByIdAndLastName" resultType="com.hy.mybatis.Employee">
        select * from employee  where id=#{id} and last_name=#{lastName}
    </select>


    <select id="getEmployeeByMap" resultType="com.hy.mybatis.Employee">
        select * from employee  where id=#{id} and last_name=#{lastName}
    </select>


    <select id="getEmployeeReturnMap" resultType="map">
        select * from employee where id=#{id}
    </select>


    <!--resultType：如果返回的是一个集合，要写集合中元素的类型  -->
    <select id="getEmpByLastNameLikeReturnMap" resultType="com.hy.mybatis.Employee">
        select * from employee where last_name like #{lastName}
    </select>


</mapper>